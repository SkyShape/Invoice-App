{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\Components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); //   const { info, setInfo } = useGlobalContext();\n\n  he.items.forEach(el => {\n    setIndexes(prev => {\n      const count = 0;\n      prev.push(count + 1);\n    });\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const addFriend = () => {\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const removeFriend = index => () => {\n    setIndexes(prevIndexes => [...prevIndexes.filter(item => item !== index)]);\n    setCounter(prevCounter => prevCounter - 1);\n  };\n\n  const clearFriends = () => {\n    setIndexes([]);\n  };\n\n  console.log(counter, indexes);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [he.items.map(index => {\n      const fieldName = `he.items[${index}]`;\n      return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        name: fieldName,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"First Name \", index, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `${fieldName}.firstName`,\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last Name \", index, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: `${fieldName}.lastName`,\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: removeFriend(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, fieldName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addFriend,\n      children: \"Add Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: clearFriends,\n      children: \"Clear Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"KourkSJjy+3HbAzrwVkfccfaOWc=\", false, function () {\n  return [useForm];\n});\n\n_c = Test;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 17\n}, this), rootElement);\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/Components/Test.js"],"names":["React","useGlobalContext","useForm","ReactDOM","Test","indexes","setIndexes","useState","counter","setCounter","register","handleSubmit","he","items","forEach","el","prev","count","push","onSubmit","data","console","log","addFriend","prevIndexes","prevCounter","removeFriend","index","filter","item","clearFriends","map","fieldName","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction Test() {\r\n  const [indexes, setIndexes] = React.useState([]);\r\n  const [counter, setCounter] = React.useState(0);\r\n  const { register, handleSubmit } = useForm();\r\n  //   const { info, setInfo } = useGlobalContext();\r\n  he.items.forEach((el) => {\r\n    setIndexes((prev) => {\r\n      const count = 0;\r\n      prev.push(count + 1);\r\n    });\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const addFriend = () => {\r\n    setIndexes((prevIndexes) => [...prevIndexes, counter]);\r\n    setCounter((prevCounter) => prevCounter + 1);\r\n  };\r\n\r\n  const removeFriend = (index) => () => {\r\n    setIndexes((prevIndexes) => [\r\n      ...prevIndexes.filter((item) => item !== index),\r\n    ]);\r\n    setCounter((prevCounter) => prevCounter - 1);\r\n  };\r\n\r\n  const clearFriends = () => {\r\n    setIndexes([]);\r\n  };\r\n\r\n  console.log(counter, indexes);\r\n\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {he.items.map((index) => {\r\n        const fieldName = `he.items[${index}]`;\r\n        return (\r\n          <fieldset name={fieldName} key={fieldName}>\r\n            <label>\r\n              First Name {index}:\r\n              <input\r\n                type=\"text\"\r\n                name={`${fieldName}.firstName`}\r\n                ref={register}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Last Name {index}:\r\n              <input\r\n                type=\"text\"\r\n                name={`${fieldName}.lastName`}\r\n                ref={register}\r\n              />\r\n            </label>\r\n            <button type=\"button\" onClick={removeFriend(index)}>\r\n              Remove\r\n            </button>\r\n          </fieldset>\r\n        );\r\n      })}\r\n\r\n      <button type=\"button\" onClick={addFriend}>\r\n        Add Friend\r\n      </button>\r\n      <button type=\"button\" onClick={clearFriends}>\r\n        Clear Friends\r\n      </button>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Test />, rootElement);\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}
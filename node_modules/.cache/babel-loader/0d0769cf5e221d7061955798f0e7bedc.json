{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\Components\\\\Itemmm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Itemmm = ({\n  register,\n  info,\n  watch,\n  errors\n}) => {\n  _s();\n\n  const [item, setItem] = useState([...info.items]);\n  const [counter, setCounter] = useState();\n\n  const addItem = () => {\n    setItem(prevItem => [...prevItem, {}]); // setCounter((prevCounter) => prevCounter + 1);\n  };\n\n  const removeItem = index => {\n    setItem(prevItem => [...prevItem.filter(item => item !== index)]); // setCounter((prevCounter) => prevCounter - 1);\n\n    console.log(item);\n    console.log(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [item.map((el, i) => {\n      const fieldName = `items[${i}]`;\n      const quantity = watch(`${fieldName}.quantity`);\n      const price = watch(`${fieldName}.price`); // info.items[i].total = quantity * price;\n      // const total = [];\n      // total.concat(info.items[i].total);\n      // console.log(total);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        name: fieldName,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Item Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            // style={{\n            //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\n            // }}\n            type: \"text\",\n            name: `${fieldName}.name`,\n            ref: register({\n              required: true,\n              maxLength: 80\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Item Qty\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: `${fieldName}.quantity`,\n            ref: register({\n              required: true,\n              maxLength: 5\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Item Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: `${fieldName}.price`,\n            ref: register({\n              required: true,\n              maxLength: 8\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: quantity * price || \"0.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: // item.length > 1 ? removeItem(i) : undefined\n          // removeItem(i)\n          () => {\n            // item.length > 1 &&\n            removeItem(i);\n            console.log(i);\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, fieldName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Itemmm, \"PhfLvYTw1s18BIRYHpbZ1IKv/C0=\");\n\n_c = Itemmm;\nexport default Itemmm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemmm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/Components/Itemmm.js"],"names":["React","useState","Itemmm","register","info","watch","errors","item","setItem","items","counter","setCounter","addItem","prevItem","removeItem","index","filter","console","log","map","el","i","fieldName","quantity","price","required","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Itemmm = ({ register, info, watch, errors }) => {\r\n  const [item, setItem] = useState([...info.items]);\r\n  const [counter, setCounter] = useState();\r\n\r\n  const addItem = () => {\r\n    setItem((prevItem) => [...prevItem, {}]);\r\n    // setCounter((prevCounter) => prevCounter + 1);\r\n  };\r\n\r\n  const removeItem = (index) => {\r\n    setItem((prevItem) => [\r\n      ...prevItem.filter(item => item !== index),\r\n    ]);\r\n    // setCounter((prevCounter) => prevCounter - 1);\r\n    console.log(item);\r\n    console.log(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <form onSubmit={handleSubmit(onSubmit)}> */}\r\n      {item.map((el, i) => {\r\n        const fieldName = `items[${i}]`;\r\n        const quantity = watch(`${fieldName}.quantity`);\r\n        const price = watch(`${fieldName}.price`);\r\n        // info.items[i].total = quantity * price;\r\n        // const total = [];\r\n        // total.concat(info.items[i].total);\r\n        // console.log(total);\r\n        return (\r\n          <div name={fieldName} key={fieldName}>\r\n            <label>\r\n              Item Name\r\n              <input\r\n                // style={{\r\n                //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\r\n                // }}\r\n                type=\"text\"\r\n                name={`${fieldName}.name`}\r\n                ref={register({ required: true, maxLength: 80 })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Item Qty\r\n              <input\r\n                type=\"number\"\r\n                name={`${fieldName}.quantity`}\r\n                ref={register({ required: true, maxLength: 5 })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Item Price\r\n              <input\r\n                type=\"number\"\r\n                name={`${fieldName}.price`}\r\n                ref={register({ required: true, maxLength: 8 })}\r\n              />\r\n            </label>\r\n            <div>\r\n              <h3>Total</h3>\r\n              <h3>{quantity * price || \"0.00\"}</h3>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={\r\n                // item.length > 1 ? removeItem(i) : undefined\r\n                // removeItem(i)\r\n\r\n                () => {\r\n                  // item.length > 1 &&\r\n                  removeItem(i);\r\n                  console.log(i);\r\n                }\r\n              }\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <button type=\"button\" onClick={addItem}>\r\n        Add Item\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Itemmm;\r\n"]},"metadata":{},"sourceType":"module"}
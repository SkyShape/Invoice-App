{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\Components\\\\Itemmm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport garbage from \"../assets/icon-delete.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Itemmm = ({\n  register,\n  watch,\n  errors\n}) => {\n  _s();\n\n  const {\n    info,\n    setInfo\n  } = useGlobalContext(); // const [item, setItem] = useState([...info.items]);\n\n  const [counter, setCounter] = useState();\n\n  const addItem = () => {\n    setInfo({ ...info,\n      items: [...info.items, {}]\n    }); // setItem((prevItem) => [...prevItem, {}]);\n    // setCounter((prevCounter) => prevCounter + 1);\n  };\n\n  const removeItem = index => {\n    setInfo({ ...info,\n      items: [...info.items.filter((item, i) => {\n        return i !== index;\n      })]\n    }); // setInfo((info) => [...info.items.filter((item) => item !== index)]);\n    // setItem((prevItem) => [...info.items.filter((item,i) => i !== index)]);\n    // setCounter((prevCounter) => prevCounter - 1);\n\n    console.log(info.items);\n    console.log(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [info === null || info === void 0 ? void 0 : info.items.map((el, i) => {\n      const fieldName = `items[${i}]`;\n      const quantity = watch(`${fieldName}.quantity`);\n      const price = watch(`${fieldName}.price`);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        name: fieldName,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items__input\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item__input__name\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Item Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  // style={{\n                  //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\n                  // }}\n                  type: \"text\",\n                  name: `${fieldName}.name`,\n                  ref: register({\n                    required: true,\n                    maxLength: 80\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items__total\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"items__input__fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"qty\",\n                children: [\"Item Qty\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: `${fieldName}.quantity`,\n                  ref: register({\n                    required: true,\n                    maxLength: 5\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"price\",\n                children: [\"Item Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: `${fieldName}.price`,\n                  ref: register({\n                    required: true,\n                    maxLength: 8\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: quantity * price || \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: true,\n              src: garbage,\n              alt: \"\",\n              onClick: // item.length > 1 ? removeItem(i) : undefined\n              // removeItem(i)\n              () => {\n                // item.length > 1 &&\n                removeItem(i);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, fieldName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Itemmm, \"Q+QAtbbqf5tlkg3kKN7wDTLTdjQ=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Itemmm;\nexport default Itemmm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemmm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/Components/Itemmm.js"],"names":["React","useState","useGlobalContext","Itemmm","register","watch","errors","info","setInfo","counter","setCounter","addItem","items","removeItem","index","filter","item","i","console","log","map","el","fieldName","quantity","price","required","maxLength","garbage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport garbage from \"../assets/icon-delete.svg\";\r\n\r\nconst Itemmm = ({ register, watch, errors }) => {\r\n  const { info, setInfo } = useGlobalContext();\r\n\r\n  // const [item, setItem] = useState([...info.items]);\r\n  const [counter, setCounter] = useState();\r\n\r\n  const addItem = () => {\r\n    setInfo({ ...info, items: [...info.items, {}] });\r\n    // setItem((prevItem) => [...prevItem, {}]);\r\n    // setCounter((prevCounter) => prevCounter + 1);\r\n  };\r\n\r\n  const removeItem = (index) => {\r\n    setInfo({\r\n      ...info,\r\n      items: [\r\n        ...info.items.filter((item, i) => {\r\n          return i !== index;\r\n        }),\r\n      ],\r\n    });\r\n    // setInfo((info) => [...info.items.filter((item) => item !== index)]);\r\n    // setItem((prevItem) => [...info.items.filter((item,i) => i !== index)]);\r\n    // setCounter((prevCounter) => prevCounter - 1);\r\n    console.log(info.items);\r\n    console.log(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <form onSubmit={handleSubmit(onSubmit)}> */}\r\n      {info?.items.map((el, i) => {\r\n        const fieldName = `items[${i}]`;\r\n        const quantity = watch(`${fieldName}.quantity`);\r\n        const price = watch(`${fieldName}.price`);\r\n        return (\r\n          <div name={fieldName} key={fieldName}>\r\n            <div className=\"items\">\r\n              <div className=\"items__input\">\r\n                <div className=\"item__input__name\">\r\n                  <label>\r\n                    Item Name\r\n                    <input\r\n                      // style={{\r\n                      //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\r\n                      // }}\r\n                      type=\"text\"\r\n                      name={`${fieldName}.name`}\r\n                      ref={register({ required: true, maxLength: 80 })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"items__total\">\r\n                <div className=\"items__input__fields\">\r\n                  <label className=\"qty\">\r\n                    Item Qty\r\n                    <input\r\n                      \r\n                      type=\"number\"\r\n                      name={`${fieldName}.quantity`}\r\n                      ref={register({ required: true, maxLength: 5 })}\r\n                    />\r\n                  </label>\r\n                  <label className=\"price\">\r\n                    Item Price\r\n                    <input\r\n                      \r\n                      type=\"number\"\r\n                      name={`${fieldName}.price`}\r\n                      ref={register({ required: true, maxLength: 8 })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3>Total</h3>\r\n                  <h3>{quantity * price || \"0.00\"}</h3>\r\n                </div>\r\n                <img\r\n                className\r\n                  src={garbage}\r\n                  alt=\"\"\r\n                  onClick={\r\n                    // item.length > 1 ? removeItem(i) : undefined\r\n                    // removeItem(i)\r\n\r\n                    () => {\r\n                      // item.length > 1 &&\r\n                      removeItem(i);\r\n                    }\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <button type=\"button\" onClick={addItem}>\r\n        Add Item\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Itemmm;\r\n"]},"metadata":{},"sourceType":"module"}
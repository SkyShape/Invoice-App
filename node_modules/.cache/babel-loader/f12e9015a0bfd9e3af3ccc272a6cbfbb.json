{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\context.js\",\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\nimport inv from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const infoFormat = {\n    clientAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\"\n    },\n    clientEmail: \"\",\n    clientName: \"\",\n    createdOn: \"\",\n    description: \"\",\n    id: \"\",\n    items: [],\n    paymentDue: \"\",\n    paymentTerms: \"\",\n    senderAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\"\n    },\n    status: \"\",\n    total: \"\"\n  };\n  const [data, setData] = useState([...inv]);\n  const [info, setInfo] = useState({ ...infoFormat\n  });\n  const [changedInfo, setChangedInfo] = useState({ ...infoFormat\n  });\n  const [chosenId, setChosenId] = useState([]);\n  const [idx, setIdx] = useState();\n  const [statuses, setStatuses] = useState({\n    draft: false,\n    pending: false,\n    paid: false\n  });\n  const [confDelete, setConfDelete] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  function useWindowSize() {\n    _s();\n\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n\n      window.addEventListener(\"resize\", updateSize);\n      updateSize();\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return size;\n  }\n\n  _s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"testObj\");\n\n    if (json) {\n      setData(JSON.parse(json));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"testObj\", JSON.stringify(data));\n\n    if (data.length === 0) {\n      setData([...inv]);\n    }\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      id\n    } = e.target; //  if (!value.trim()) {\n    //    setFilled(false);\n    //    e.target.classList.add(\"empty\");\n    //  } else {\n    //    setFilled(true);\n    //  }\n\n    if (id) {\n      if (id === items) {} else {\n        setChangedInfo({ ...changedInfo,\n          [id]: { ...changedInfo[id],\n            [name]: value\n          }\n        });\n      }\n    } else {\n      setChangedInfo({ ...changedInfo,\n        [name]: value\n      });\n    } //  console.log(filled);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      data,\n      setData,\n      useWindowSize,\n      setChosenId,\n      chosenId,\n      info,\n      setInfo,\n      statuses,\n      setStatuses,\n      infoFormat,\n      idx,\n      setIdx,\n      confDelete,\n      setConfDelete,\n      showForm,\n      setShowForm,\n      changedInfo,\n      setChangedInfo,\n      edit,\n      setEdit,\n      handleChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AppProvider, \"sM+HGd/JNiGRjqv6fv1hUOv8/RE=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s3();\n\n  return useContext(AppContext);\n};\n\n_s3(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/context.js"],"names":["React","useState","useContext","useLayoutEffect","useEffect","inv","AppContext","createContext","AppProvider","children","infoFormat","clientAddress","street","city","postCode","country","clientEmail","clientName","createdOn","description","id","items","paymentDue","paymentTerms","senderAddress","status","total","data","setData","info","setInfo","changedInfo","setChangedInfo","chosenId","setChosenId","idx","setIdx","statuses","setStatuses","draft","pending","paid","confDelete","setConfDelete","showForm","setShowForm","edit","setEdit","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","json","localStorage","getItem","JSON","parse","setItem","stringify","length","handleChange","e","name","value","target","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\r\nimport inv from \"./data.json\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const infoFormat = {\r\n    clientAddress: {\r\n      street: \"\",\r\n      city: \"\",\r\n      postCode: \"\",\r\n      country: \"\",\r\n    },\r\n    clientEmail: \"\",\r\n    clientName: \"\",\r\n    createdOn: \"\",\r\n    description: \"\",\r\n    id: \"\",\r\n    items: [],\r\n    paymentDue: \"\",\r\n    paymentTerms: \"\",\r\n    senderAddress: {\r\n      street: \"\",\r\n      city: \"\",\r\n      postCode: \"\",\r\n      country: \"\",\r\n    },\r\n    status: \"\",\r\n    total: \"\",\r\n  };\r\n\r\n  const [data, setData] = useState([...inv]);\r\n  const [info, setInfo] = useState({ ...infoFormat });\r\n  const [changedInfo, setChangedInfo] = useState({ ...infoFormat });\r\n  const [chosenId, setChosenId] = useState([]);\r\n  const [idx, setIdx] = useState();\r\n\r\n  const [statuses, setStatuses] = useState({\r\n    draft: false,\r\n    pending: false,\r\n    paid: false,\r\n  });\r\n  const [confDelete, setConfDelete] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"testObj\");\r\n    if (json) {\r\n      setData(JSON.parse(json));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"testObj\", JSON.stringify(data));\r\n    if (data.length === 0) {\r\n      setData([...inv]);\r\n    }\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, id } = e.target;\r\n\r\n    //  if (!value.trim()) {\r\n    //    setFilled(false);\r\n    //    e.target.classList.add(\"empty\");\r\n    //  } else {\r\n    //    setFilled(true);\r\n    //  }\r\n\r\n    if (id) {\r\n      if (id === items) {\r\n      } else {\r\n        setChangedInfo({\r\n          ...changedInfo,\r\n          [id]: { ...changedInfo[id], [name]: value },\r\n        });\r\n      }\r\n    } else {\r\n      setChangedInfo({ ...changedInfo, [name]: value });\r\n    }\r\n\r\n    //  console.log(filled);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        data,\r\n        setData,\r\n        useWindowSize,\r\n        setChosenId,\r\n        chosenId,\r\n        info,\r\n        setInfo,\r\n        statuses,\r\n        setStatuses,\r\n        infoFormat,\r\n        idx,\r\n        setIdx,\r\n        confDelete,\r\n        setConfDelete,\r\n        showForm,\r\n        setShowForm,\r\n        changedInfo,\r\n        setChangedInfo,\r\n        edit,\r\n        setEdit,\r\n        handleChange,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n"]},"metadata":{},"sourceType":"module"}
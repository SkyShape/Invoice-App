{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\context.js\",\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\nimport inv from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const infoFormat = {\n    clientAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\"\n    },\n    clientEmail: \"\",\n    clientName: \"\",\n    createdOn: \"\",\n    description: \"\",\n    id: \"\",\n    items: [{\n      total: \"\"\n    }],\n    paymentDue: \"\",\n    paymentTerms: \"1\",\n    senderAddress: {\n      street: \"\",\n      city: \"\",\n      postCode: \"\",\n      country: \"\"\n    },\n    status: \"\",\n    total: \"\"\n  };\n  const [data, setData] = useState([...inv]);\n  const [info, setInfo] = useState({ ...infoFormat\n  });\n  const [changedInfo, setChangedInfo] = useState({});\n  const [chosenId, setChosenId] = useState([]);\n  const [idx, setIdx] = useState(0);\n  const [statuses, setStatuses] = useState({\n    draft: false,\n    pending: false,\n    paid: false\n  });\n  const [confDelete, setConfDelete] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [item, setItem] = useState([]);\n\n  function useWindowSize() {\n    _s();\n\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n\n      window.addEventListener(\"resize\", updateSize);\n      updateSize();\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return size;\n  }\n\n  _s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"testObj\");\n\n    if (json) {\n      setData(JSON.parse(json));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"testObj\", JSON.stringify(data));\n\n    if (data.length === 0) {\n      setData([...inv]);\n    }\n  });\n\n  const handleCancel = () => {\n    setEdit(false); // setChangedInfo({ ...info });\n    // setItem([]);\n\n    setShowForm(false);\n  };\n\n  const onSubmit = dat => {\n    let total = 0;\n    dat.items.map(el => {\n      el.total = el.quantity * el.price;\n      total += parseInt(el.total);\n    });\n\n    if (edit) {\n      const final = { ...info,\n        ...dat,\n        status: \"pending\",\n        total\n      };\n      setInfo({ ...info,\n        ...final\n      });\n      data.splice(idx, 1, final);\n      handleCancel();\n      console.log(data[idx]);\n    } else {\n      data.push({ ...info,\n        ...dat,\n        id: idGen(),\n        status: \"pending\"\n      });\n    }\n  };\n\n  const idGen = function () {\n    return Math.random().toString(36).substr(2, 6).toUpperCase();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if (!filled) {\n    //   console.log(\"sddsa\");\n    // }\n\n    setInfo({ ...changedInfo\n    });\n\n    if (!edit) {\n      data.push({ ...changedInfo,\n        id: idGen()\n      });\n      setChangedInfo({ ...infoFormat\n      });\n      console.log(data);\n    } else {\n      data.splice(idx, 1, changedInfo);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      id\n    } = e.target; //  if (!value.trim()) {\n    //    setFilled(false);\n    //    e.target.classList.add(\"empty\");\n    //  } else {\n    //    setFilled(true);\n    //  }\n\n    if (id) {\n      if (id === changedInfo.items) {\n        setChangedInfo({ ...changedInfo,\n          items: [...changedInfo.items, {\n            [name]: value\n          }]\n        });\n      } else {\n        setChangedInfo({ ...changedInfo,\n          [id]: { ...changedInfo[id],\n            [name]: value\n          }\n        });\n      }\n    } else {\n      setChangedInfo({ ...changedInfo,\n        [name]: value\n      });\n    } //  console.log(filled);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      data,\n      setData,\n      useWindowSize,\n      setChosenId,\n      chosenId,\n      info,\n      setInfo,\n      statuses,\n      setStatuses,\n      infoFormat,\n      idx,\n      setIdx,\n      confDelete,\n      setConfDelete,\n      showForm,\n      setShowForm,\n      changedInfo,\n      setChangedInfo,\n      edit,\n      setEdit,\n      handleChange,\n      handleCancel,\n      handleSubmit,\n      item,\n      setItem,\n      onSubmit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AppProvider, \"nFzN6H01AgRnpBSxKof/ONrlV2c=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s3();\n\n  return useContext(AppContext);\n};\n\n_s3(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/context.js"],"names":["React","useState","useContext","useLayoutEffect","useEffect","inv","AppContext","createContext","AppProvider","children","infoFormat","clientAddress","street","city","postCode","country","clientEmail","clientName","createdOn","description","id","items","total","paymentDue","paymentTerms","senderAddress","status","data","setData","info","setInfo","changedInfo","setChangedInfo","chosenId","setChosenId","idx","setIdx","statuses","setStatuses","draft","pending","paid","confDelete","setConfDelete","showForm","setShowForm","edit","setEdit","item","setItem","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","json","localStorage","getItem","JSON","parse","stringify","length","handleCancel","onSubmit","dat","map","el","quantity","price","parseInt","final","splice","console","log","push","idGen","Math","random","toString","substr","toUpperCase","handleSubmit","e","preventDefault","handleChange","name","value","target","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\r\nimport inv from \"./data.json\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const infoFormat = {\r\n    clientAddress: {\r\n      street: \"\",\r\n      city: \"\",\r\n      postCode: \"\",\r\n      country: \"\",\r\n    },\r\n    clientEmail: \"\",\r\n    clientName: \"\",\r\n    createdOn: \"\",\r\n    description: \"\",\r\n    id: \"\",\r\n    items: [{ total: \"\" }],\r\n    paymentDue: \"\",\r\n    paymentTerms: \"1\",\r\n    senderAddress: {\r\n      street: \"\",\r\n      city: \"\",\r\n      postCode: \"\",\r\n      country: \"\",\r\n    },\r\n    status: \"\",\r\n    total: \"\",\r\n  };\r\n\r\n  const [data, setData] = useState([...inv]);\r\n  const [info, setInfo] = useState({ ...infoFormat });\r\n  const [changedInfo, setChangedInfo] = useState({});\r\n  const [chosenId, setChosenId] = useState([]);\r\n  const [idx, setIdx] = useState(0);\r\n\r\n  const [statuses, setStatuses] = useState({\r\n    draft: false,\r\n    pending: false,\r\n    paid: false,\r\n  });\r\n  const [confDelete, setConfDelete] = useState(false);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"testObj\");\r\n    if (json) {\r\n      setData(JSON.parse(json));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"testObj\", JSON.stringify(data));\r\n    if (data.length === 0) {\r\n      setData([...inv]);\r\n    }\r\n  });\r\n\r\n  const handleCancel = () => {\r\n    setEdit(false);\r\n    // setChangedInfo({ ...info });\r\n    // setItem([]);\r\n    setShowForm(false);\r\n  };\r\n\r\n  const onSubmit = (dat) => {\r\n    let total = 0;\r\n    dat.items.map((el) => {\r\n      el.total = el.quantity * el.price;\r\n      total += parseInt(el.total);\r\n    });\r\n    if (edit) {\r\n      const final = {\r\n        ...info,\r\n        ...dat,\r\n        status: \"pending\",\r\n        total,\r\n      };\r\n\r\n      setInfo({\r\n        ...info,\r\n        ...final,\r\n      });\r\n      data.splice(idx, 1, final);\r\n      handleCancel();\r\n      console.log(data[idx]);\r\n    } else {\r\n      data.push({ ...info, ...dat, id: idGen(), status: \"pending\" });\r\n    }\r\n  };\r\n\r\n  const idGen = function () {\r\n    return Math.random().toString(36).substr(2, 6).toUpperCase();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (!filled) {\r\n    //   console.log(\"sddsa\");\r\n    // }\r\n    setInfo({ ...changedInfo });\r\n\r\n    if (!edit) {\r\n      data.push({ ...changedInfo, id: idGen() });\r\n      setChangedInfo({ ...infoFormat });\r\n      console.log(data);\r\n    } else {\r\n      data.splice(idx, 1, changedInfo);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, id } = e.target;\r\n\r\n    //  if (!value.trim()) {\r\n    //    setFilled(false);\r\n    //    e.target.classList.add(\"empty\");\r\n    //  } else {\r\n    //    setFilled(true);\r\n    //  }\r\n\r\n    if (id) {\r\n      if (id === changedInfo.items) {\r\n        setChangedInfo({\r\n          ...changedInfo,\r\n          items: [...changedInfo.items, { [name]: value }],\r\n        });\r\n      } else {\r\n        setChangedInfo({\r\n          ...changedInfo,\r\n          [id]: { ...changedInfo[id], [name]: value },\r\n        });\r\n      }\r\n    } else {\r\n      setChangedInfo({ ...changedInfo, [name]: value });\r\n    }\r\n\r\n    //  console.log(filled);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        data,\r\n        setData,\r\n        useWindowSize,\r\n        setChosenId,\r\n        chosenId,\r\n        info,\r\n        setInfo,\r\n        statuses,\r\n        setStatuses,\r\n        infoFormat,\r\n        idx,\r\n        setIdx,\r\n        confDelete,\r\n        setConfDelete,\r\n        showForm,\r\n        setShowForm,\r\n        changedInfo,\r\n        setChangedInfo,\r\n        edit,\r\n        setEdit,\r\n        handleChange,\r\n        handleCancel,\r\n        handleSubmit,\r\n        item,\r\n        setItem,\r\n        onSubmit,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n"]},"metadata":{},"sourceType":"module"}
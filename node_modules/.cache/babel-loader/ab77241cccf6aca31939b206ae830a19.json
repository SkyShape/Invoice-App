{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\Components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { useGlobalContext } from \"../context\";\nimport \"../styles/Form.css\";\nimport Item from \"./Item\";\nimport FormButtons from \"./FormButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const {\n    data,\n    setData,\n    info,\n    setInfo,\n    idx,\n    showForm,\n    setShowForm,\n    changedInfo,\n    setChangedInfo,\n    edit,\n    setEdit,\n    infoFormat,\n    handleChange,\n    handleCancel,\n    handleSubmit,\n    item,\n    setItem\n  } = useGlobalContext();\n  const [filled, setFilled] = useState(false);\n  console.log(info);\n  console.log(changedInfo);\n  let {\n    id,\n    createdOn,\n    paymentDue,\n    description,\n    paymentTerms,\n    clientName,\n    clientEmail,\n    status,\n    senderAddress,\n    clientAddress,\n    items,\n    total\n  } = changedInfo; // if (edit) {\n  //   items.forEach((el) => {\n  //     setItem(item.concat(<Item handleChange={handleChange} el={item} />));\n  //   });\n  // }\n  // const handleCancel = () => {\n  //   setEdit(false);\n  //   setChangedInfo({ ...info });\n  //   setItem([]);\n  //   setShowForm(false);\n  // };\n\n  const checkForEmpty = obj => {\n    for (const key in obj) {}\n  }; // const idGen = function () {\n  //   return Math.random().toString(36).substr(2, 6).toUpperCase();\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (!filled) {\n  //     console.log(\"sddsa\");\n  //   }\n  //   setInfo({ ...changedInfo });\n  //   if (!edit) {\n  //     data.push({ ...changedInfo, id: idGen() });\n  //     setChangedInfo({ ...infoFormat });\n  //     console.log(data);\n  //   } else {\n  //     data.splice(idx, 1, changedInfo);\n  //   }\n  // };\n  // const handleChange = (e) => {\n  //   const { name, value, id } = e.target;\n  //   if (!value.trim()) {\n  //     setFilled(false);\n  //     e.target.classList.add(\"empty\");\n  //   } else {\n  //     setFilled(true);\n  //   }\n  //   if (id) {\n  //     setChangedInfo({\n  //       ...changedInfo,\n  //       [id]: { ...changedInfo[id], [name]: value },\n  //     });\n  //   } else {\n  //     setChangedInfo({ ...changedInfo, [name]: value });\n  //   }\n  //   console.log(filled);\n  // };\n\n\n  if (!showForm) {\n    return null;\n  }\n\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"darken-bg\",\n    onClick: () => {\n      handleCancel();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__header\",\n        children: edit ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 20\n          }, this), id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"bill\",\n          children: \"Bill From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"senderAddressStreet\",\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"senderAddress\",\n              name: \"street\",\n              value: senderAddress.street,\n              onChange: e => {\n                handleChange(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender__horizontal grid__horizontal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"senderAddressCity\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"senderAddress\",\n                name: \"city\",\n                value: senderAddress.city,\n                onChange: e => {\n                  handleChange(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"senderAddressPostCode\",\n                children: \"Post Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"senderAddress\",\n                name: \"postCode\",\n                value: senderAddress.postCode,\n                onChange: e => {\n                  handleChange(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input grid__third\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"senderAddressCountry\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"senderAddress\",\n                name: \"country\",\n                value: senderAddress.country,\n                onChange: e => {\n                  handleChange(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"bill\",\n          children: \"Bill To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientName\",\n            children: \"Client's Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"clientName\",\n            value: clientName,\n            onChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientEmail\",\n            children: \"Client's Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"clientEmail\",\n            value: clientEmail,\n            onChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientAddressStreet\",\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"clientAddress\",\n            name: \"street\",\n            value: clientAddress.street,\n            onChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client__horizontal grid__horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"clientAddressCity\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"clientAddress\",\n              name: \"city\",\n              value: clientAddress.city,\n              onChange: e => {\n                handleChange(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"clientAddressPostCode\",\n              children: \"Post Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"clientAddress\",\n              name: \"postCode\",\n              value: clientAddress.postCode,\n              onChange: e => {\n                handleChange(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input  grid__third\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"clientAddressCountry\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"clientAddress\",\n              name: \"country\",\n              value: clientAddress.country,\n              onChange: e => {\n                handleChange(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client__date grid__horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"createdOn\",\n              children: \"Invoice Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"createdOn\",\n              value: createdOn,\n              onChange: e => {\n                handleChange(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"paymentTerms\",\n              children: \"Payment Terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"\",\n              name: \"paymentTerms\",\n              value: paymentTerms,\n              onChange: e => {\n                handleChange(e);\n                var result = new Date(createdOn);\n                result.setDate(result.getDate() + parseInt(paymentTerms));\n                console.log(result);\n                setChangedInfo({ ...changedInfo\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Net 1 Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), \";\", /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"Net 7 Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), \";\", /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"14\",\n                children: \"Net 14 Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), \";\", /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"Net 30 Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: description,\n            onChange: e => {\n              handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), item, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            setItem(item.concat( /*#__PURE__*/_jsxDEV(Item, {\n              el: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 35\n            }, this))); // addItem(item);\n          },\n          children: \"+ Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this), document.getElementById(\"portal\"));\n}\n\n_s(Form, \"9JRsMbGAePV+iUYSVf6ipuP1Ras=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/Components/Form.js"],"names":["React","useState","useEffect","useRef","ReactDom","useGlobalContext","Item","FormButtons","Form","data","setData","info","setInfo","idx","showForm","setShowForm","changedInfo","setChangedInfo","edit","setEdit","infoFormat","handleChange","handleCancel","handleSubmit","item","setItem","filled","setFilled","console","log","id","createdOn","paymentDue","description","paymentTerms","clientName","clientEmail","status","senderAddress","clientAddress","items","total","checkForEmpty","obj","key","createPortal","e","stopPropagation","street","city","postCode","country","result","Date","setDate","getDate","parseInt","preventDefault","concat","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport \"../styles/Form.css\";\r\nimport Item from \"./Item\";\r\nimport FormButtons from \"./FormButtons\";\r\n\r\nfunction Form() {\r\n  const {\r\n    data,\r\n    setData,\r\n    info,\r\n    setInfo,\r\n    idx,\r\n    showForm,\r\n    setShowForm,\r\n    changedInfo,\r\n    setChangedInfo,\r\n    edit,\r\n    setEdit,\r\n    infoFormat,\r\n    handleChange,\r\n    handleCancel,\r\n    handleSubmit,\r\n    item,\r\n    setItem,\r\n  } = useGlobalContext();\r\n\r\n  const [filled, setFilled] = useState(false);\r\n  console.log(info);\r\n  console.log(changedInfo);\r\n\r\n  let {\r\n    id,\r\n    createdOn,\r\n    paymentDue,\r\n    description,\r\n    paymentTerms,\r\n    clientName,\r\n    clientEmail,\r\n    status,\r\n    senderAddress,\r\n    clientAddress,\r\n    items,\r\n    total,\r\n  } = changedInfo;\r\n\r\n  // if (edit) {\r\n  //   items.forEach((el) => {\r\n  //     setItem(item.concat(<Item handleChange={handleChange} el={item} />));\r\n  //   });\r\n  // }\r\n\r\n  // const handleCancel = () => {\r\n  //   setEdit(false);\r\n  //   setChangedInfo({ ...info });\r\n  //   setItem([]);\r\n  //   setShowForm(false);\r\n  // };\r\n\r\n  const checkForEmpty = (obj) => {\r\n    for (const key in obj) {\r\n    }\r\n  };\r\n\r\n  // const idGen = function () {\r\n  //   return Math.random().toString(36).substr(2, 6).toUpperCase();\r\n  // };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (!filled) {\r\n  //     console.log(\"sddsa\");\r\n  //   }\r\n  //   setInfo({ ...changedInfo });\r\n\r\n  //   if (!edit) {\r\n  //     data.push({ ...changedInfo, id: idGen() });\r\n  //     setChangedInfo({ ...infoFormat });\r\n  //     console.log(data);\r\n  //   } else {\r\n  //     data.splice(idx, 1, changedInfo);\r\n  //   }\r\n  // };\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value, id } = e.target;\r\n\r\n  //   if (!value.trim()) {\r\n  //     setFilled(false);\r\n  //     e.target.classList.add(\"empty\");\r\n  //   } else {\r\n  //     setFilled(true);\r\n  //   }\r\n\r\n  //   if (id) {\r\n  //     setChangedInfo({\r\n  //       ...changedInfo,\r\n  //       [id]: { ...changedInfo[id], [name]: value },\r\n  //     });\r\n  //   } else {\r\n  //     setChangedInfo({ ...changedInfo, [name]: value });\r\n  //   }\r\n\r\n  //   console.log(filled);\r\n  // };\r\n\r\n  if (!showForm) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDom.createPortal(\r\n    <div\r\n      className=\"darken-bg\"\r\n      onClick={() => {\r\n        handleCancel();\r\n      }}\r\n    >\r\n      <div\r\n        className=\"form\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"form__header\">\r\n          {edit ? (\r\n            <h1>\r\n              Edit <span className=\"hashtag\">#</span>\r\n              {id}\r\n            </h1>\r\n          ) : (\r\n            <h1>New Invoice</h1>\r\n          )}\r\n        </div>\r\n\r\n        <form>\r\n          <h3 className=\"bill\">Bill From</h3>\r\n          <div className=\"sender\">\r\n            <div className=\"input\">\r\n              <label htmlFor=\"senderAddressStreet\">Street Address</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"senderAddress\"\r\n                name=\"street\"\r\n                value={senderAddress.street}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"sender__horizontal grid__horizontal\">\r\n              <div className=\"input\">\r\n                <label htmlFor=\"senderAddressCity\">City</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"senderAddress\"\r\n                  name=\"city\"\r\n                  value={senderAddress.city}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"input\">\r\n                <label htmlFor=\"senderAddressPostCode\">Post Code</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"senderAddress\"\r\n                  name=\"postCode\"\r\n                  value={senderAddress.postCode}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"input grid__third\">\r\n                <label htmlFor=\"senderAddressCountry\">Country</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"senderAddress\"\r\n                  name=\"country\"\r\n                  value={senderAddress.country}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"bill\">Bill To</h3>\r\n          <div className=\"input\">\r\n            <label htmlFor=\"clientName\">Client's Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"clientName\"\r\n              value={clientName}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input\">\r\n            <label htmlFor=\"clientEmail\">Client's Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"clientEmail\"\r\n              value={clientEmail}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"input\">\r\n            <label htmlFor=\"clientAddressStreet\">Street Address</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"clientAddress\"\r\n              name=\"street\"\r\n              value={clientAddress.street}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"client__horizontal grid__horizontal\">\r\n            <div className=\"input\">\r\n              <label htmlFor=\"clientAddressCity\">City</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"clientAddress\"\r\n                name=\"city\"\r\n                value={clientAddress.city}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input\">\r\n              <label htmlFor=\"clientAddressPostCode\">Post Code</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"clientAddress\"\r\n                name=\"postCode\"\r\n                value={clientAddress.postCode}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input  grid__third\">\r\n              <label htmlFor=\"clientAddressCountry\">Country</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"clientAddress\"\r\n                name=\"country\"\r\n                value={clientAddress.country}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"client__date grid__horizontal\">\r\n            <div className=\"input\">\r\n              <label htmlFor=\"createdOn\">Invoice Date</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"createdOn\"\r\n                value={createdOn}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"input\">\r\n              <label htmlFor=\"paymentTerms\">Payment Terms</label>\r\n              <select\r\n                className=\"\"\r\n                name=\"paymentTerms\"\r\n                value={paymentTerms}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                  var result = new Date(createdOn);\r\n                  result.setDate(result.getDate() + parseInt(paymentTerms));\r\n                  console.log(result);\r\n                  setChangedInfo({...changedInfo, })\r\n                }}\r\n              >\r\n                <option value=\"1\">Net 1 Day</option>;\r\n                <option value=\"7\">Net 7 Day</option>;\r\n                <option value=\"14\">Net 14 Day</option>;\r\n                <option value=\"30\">Net 30 Day</option>;\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"input\">\r\n            <label htmlFor=\"description\">Project Description</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* {items?.map((el) => {\r\n            return <Item handleChange={handleChange} el={el} />;\r\n          })} */}\r\n          {item}\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setItem(item.concat(<Item el={item} />));\r\n              // addItem(item);\r\n            }}\r\n          >\r\n            + Add New Item\r\n          </button>\r\n        </form>\r\n        <div>\r\n          <FormButtons />\r\n        </div>\r\n        {/* <div className=\"form__buttons\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              setEdit(false);\r\n              handleCancel();\r\n            }}\r\n          >\r\n            Discard\r\n          </button>\r\n          <button\r\n            className=\"btn\"\r\n            onClick={(e) => {\r\n              setShowForm(false);\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div> */}\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}
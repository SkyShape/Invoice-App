{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\Components\\\\Itemmm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport garbage from \"../assets/icon-delete.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Itemmm = ({\n  register,\n  watch,\n  errors\n}) => {\n  _s();\n\n  const {\n    info,\n    setInfo\n  } = useGlobalContext();\n  const [indexes, setIndexes] = React.useState([]);\n  const [counter, setCounter] = React.useState(0); // const [item, setItem] = useState([...info.items]);\n\n  const addItem = () => {\n    // setInfo({ ...info, items: [...info.items, {}] });\n    setIndexes(prevIndexes => [...prevIndexes, counter]);\n    setItem(prevItem => [...prevItem, {}]);\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const removeItem = index => {\n    // setInfo({\n    //   ...info,\n    //   items: [\n    //     ...info.items.filter((item, i) => {\n    //       return i !== index;\n    //     }),\n    //   ],\n    // });\n    setInfo(info => [...info.items.filter(item => item !== index)]);\n    setItem(prevItem => [...prevItem.filter((item, i) => {\n      console.log(i !== index);\n      return i !== index;\n    })]); // setCounter((prevCounter) => prevCounter - 1);\n\n    console.log(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [item.map((el, i) => {\n      const fieldName = `items[${i}]`;\n      const quantity = watch(`${fieldName}.quantity`);\n      const price = watch(`${fieldName}.price`);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        name: fieldName,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input item__input__name\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Item Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                // style={{\n                //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\n                // }}\n                type: \"text\",\n                name: `${fieldName}.name`,\n                ref: register({\n                  required: true,\n                  maxLength: 80\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items__total\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"items__input__fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qty input\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Item Qty\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: `${fieldName}.quantity`,\n                    ref: register({\n                      required: true,\n                      maxLength: 5\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Item Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: `${fieldName}.price`,\n                    ref: register({\n                      required: true,\n                      maxLength: 8\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: quantity * price || \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"garbage\",\n              src: garbage,\n              alt: \"\",\n              onClick: // item.length > 1 ? removeItem(i) : undefined\n              // removeItem(i)\n              () => {\n                // item.length > 1 &&\n                removeItem(i);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, fieldName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addItem,\n      className: \"add-item btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"+ Add Item \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Itemmm, \"dgkfOg187dsJPMb2oL7ZLD6Ahcc=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Itemmm;\nexport default Itemmm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Itemmm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/Components/Itemmm.js"],"names":["React","useState","useGlobalContext","Itemmm","register","watch","errors","info","setInfo","indexes","setIndexes","counter","setCounter","addItem","prevIndexes","setItem","prevItem","prevCounter","removeItem","index","items","filter","item","i","console","log","map","el","fieldName","quantity","price","required","maxLength","garbage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAiC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,gBAAgB,EAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACC,QAAN,CAAe,CAAf,CAA9B,CAH8C,CAI9C;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpB;AAEAH,IAAAA,UAAU,CAAEI,WAAD,IAAiB,CAAC,GAAGA,WAAJ,EAAiBH,OAAjB,CAAlB,CAAV;AACAI,IAAAA,OAAO,CAAEC,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAc,EAAd,CAAf,CAAP;AACAJ,IAAAA,UAAU,CAAEK,WAAD,IAAiBA,WAAW,GAAG,CAAhC,CAAV;AACD,GAND;;AAQA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,IAAAA,OAAO,CAAED,IAAD,IAAU,CAAC,GAAGA,IAAI,CAACa,KAAL,CAAWC,MAAX,CAAmBC,IAAD,IAAUA,IAAI,KAAKH,KAArC,CAAJ,CAAX,CAAP;AACAJ,IAAAA,OAAO,CAAEC,QAAD,IAAc,CACpB,GAAGA,QAAQ,CAACK,MAAT,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,KAAKJ,KAAlB;AACA,aAAOI,CAAC,KAAKJ,KAAb;AACD,KAHE,CADiB,CAAf,CAAP,CAV4B,CAgB5B;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAlBD;;AAoBA,sBACE;AAAA,eAEGA,IAAI,CAACI,GAAL,CAAS,CAACC,EAAD,EAAKJ,CAAL,KAAW;AACnB,YAAMK,SAAS,GAAI,SAAQL,CAAE,GAA7B;AACA,YAAMM,QAAQ,GAAGxB,KAAK,CAAE,GAAEuB,SAAU,WAAd,CAAtB;AACA,YAAME,KAAK,GAAGzB,KAAK,CAAE,GAAEuB,SAAU,QAAd,CAAnB;AACA,0BACE;AAAK,QAAA,IAAI,EAAEA,SAAX;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,mCACE;AAAA,mDAEE;AACE;AACA;AACA;AACA,gBAAA,IAAI,EAAC,MAJP;AAKE,gBAAA,IAAI,EAAG,GAAEA,SAAU,OALrB;AAME,gBAAA,GAAG,EAAExB,QAAQ,CAAC;AAAE2B,kBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,kBAAAA,SAAS,EAAE;AAA7B,iBAAD;AANf;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,uCACE;AAAA,sDAEE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,IAAI,EAAG,GAAEJ,SAAU,WAFrB;AAGE,oBAAA,GAAG,EAAExB,QAAQ,CAAC;AAAE2B,sBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,sBAAAA,SAAS,EAAE;AAA7B,qBAAD;AAHf;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,uCACE;AAAA,wDAEE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,IAAI,EAAG,GAAEJ,SAAU,QAFrB;AAGE,oBAAA,GAAG,EAAExB,QAAQ,CAAC;AAAE2B,sBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,sBAAAA,SAAS,EAAE;AAA7B,qBAAD;AAHf;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyBE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKH,QAAQ,GAAGC,KAAX,IAAoB;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eA6BE;AACE,cAAA,SAAS,EAAC,SADZ;AAEE,cAAA,GAAG,EAAEG,OAFP;AAGE,cAAA,GAAG,EAAC,EAHN;AAIE,cAAA,OAAO,EACL;AACA;AAEA,oBAAM;AACJ;AACAf,gBAAAA,UAAU,CAACK,CAAD,CAAV;AACD;AAXL;AAAA;AAAA;AAAA;AAAA,oBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAA2BK,SAA3B;AAAA;AAAA;AAAA;AAAA,cADF;AAgED,KApEA,CAFH,eAuEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEf,OAA/B;AAAwC,MAAA,SAAS,EAAC,cAAlD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED,CA/GD;;GAAMV,M;UACsBD,gB;;;KADtBC,M;AAiHN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport garbage from \"../assets/icon-delete.svg\";\r\n\r\nconst Itemmm = ({ register, watch, errors }) => {\r\n  const { info, setInfo } = useGlobalContext();\r\n  const [indexes, setIndexes] = React.useState([]);\r\n  const [counter, setCounter] = React.useState(0);\r\n  // const [item, setItem] = useState([...info.items]);\r\n\r\n  const addItem = () => {\r\n    // setInfo({ ...info, items: [...info.items, {}] });\r\n    \r\n    setIndexes((prevIndexes) => [...prevIndexes, counter]);\r\n    setItem((prevItem) => [...prevItem, {}]);\r\n    setCounter((prevCounter) => prevCounter + 1);\r\n  };\r\n\r\n  const removeItem = (index) => {\r\n    // setInfo({\r\n    //   ...info,\r\n    //   items: [\r\n    //     ...info.items.filter((item, i) => {\r\n    //       return i !== index;\r\n    //     }),\r\n    //   ],\r\n    // });\r\n    setInfo((info) => [...info.items.filter((item) => item !== index)]);\r\n    setItem((prevItem) => [\r\n      ...prevItem.filter((item, i) => {\r\n        console.log(i !== index);\r\n        return i !== index;\r\n      }),\r\n    ]);\r\n    // setCounter((prevCounter) => prevCounter - 1);\r\n    console.log(item);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {info?.items.map((el, i) => { */}\r\n      {item.map((el, i) => {\r\n        const fieldName = `items[${i}]`;\r\n        const quantity = watch(`${fieldName}.quantity`);\r\n        const price = watch(`${fieldName}.price`);\r\n        return (\r\n          <div name={fieldName} key={fieldName}>\r\n            <div className=\"items\">\r\n              <div className=\"input item__input__name\">\r\n                <label>\r\n                  Item Name\r\n                  <input\r\n                    // style={{\r\n                    //   border: `${errors?.fieldName?.name}` ? \"1px solid red\" : \"\",\r\n                    // }}\r\n                    type=\"text\"\r\n                    name={`${fieldName}.name`}\r\n                    ref={register({ required: true, maxLength: 80 })}\r\n                  />\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"items__total\">\r\n                <div className=\"items__input__fields\">\r\n                  <div className=\"qty input\">\r\n                    <label>\r\n                      Item Qty\r\n                      <input\r\n                        type=\"number\"\r\n                        name={`${fieldName}.quantity`}\r\n                        ref={register({ required: true, maxLength: 5 })}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"price\">\r\n                    <label>\r\n                      Item Price\r\n                      <input\r\n                        type=\"number\"\r\n                        name={`${fieldName}.price`}\r\n                        ref={register({ required: true, maxLength: 8 })}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3>Total</h3>\r\n                  <h3>{quantity * price || \"0.00\"}</h3>\r\n                </div>\r\n                <img\r\n                  className=\"garbage\"\r\n                  src={garbage}\r\n                  alt=\"\"\r\n                  onClick={\r\n                    // item.length > 1 ? removeItem(i) : undefined\r\n                    // removeItem(i)\r\n\r\n                    () => {\r\n                      // item.length > 1 &&\r\n                      removeItem(i);\r\n                    }\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <button type=\"button\" onClick={addItem} className=\"add-item btn\">\r\n        <h3>+ Add Item </h3>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Itemmm;\r\n"]},"metadata":{},"sourceType":"module"}
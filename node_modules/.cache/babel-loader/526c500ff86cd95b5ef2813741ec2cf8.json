{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\webdev\\\\invoice-app\\\\src\\\\context.js\",\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [chosenId, setChosenId] = useState([]);\n  const [info, setInfo] = useState({});\n  const [dataJson, setDataJson] = useState([...data]);\n\n  function useWindowSize() {\n    _s();\n\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n\n      window.addEventListener(\"resize\", updateSize);\n      updateSize();\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return size;\n  }\n\n  _s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      data,\n      useWindowSize,\n      setChosenId,\n      chosenId,\n      info,\n      setInfo,\n      dataJson,\n      setDataJson\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AppProvider, \"mULUEOhj5ZTQTmzua0gTKcTpXic=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s3();\n\n  return useContext(AppContext);\n};\n\n_s3(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/User/Desktop/webdev/invoice-app/src/context.js"],"names":["React","useState","useContext","useLayoutEffect","useEffect","data","AppContext","createContext","AppProvider","children","chosenId","setChosenId","info","setInfo","dataJson","setDataJson","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,eAAtC,EAAuDC,SAAvD,QAAwE,OAAxE;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAE,GAAGI,IAAL,CAAD,CAAxC;;AACA,WAASW,aAAT,GAAyB;AAAA;;AACvB,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAhC;AACAE,IAAAA,eAAe,CAAC,MAAM;AACpB,eAASgB,UAAT,GAAsB;AACpBD,QAAAA,OAAO,CAAC,CAACE,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAP;AACD;;AACDF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,UAAlC;AACAA,MAAAA,UAAU;AACV,aAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,UAArC,CAAb;AACD,KAPc,EAOZ,EAPY,CAAf;AAQA,WAAOF,IAAP;AACD;;AAfmC,KAI3BD,aAJ2B;;AAiBpC,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,IADK;AAELW,MAAAA,aAFK;AAGLL,MAAAA,WAHK;AAILD,MAAAA,QAJK;AAKLE,MAAAA,IALK;AAMLC,MAAAA,OANK;AAOLC,MAAAA,QAPK;AAQLC,MAAAA;AARK,KADT;AAAA,cAYGN;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjCD;;IAAMD,W;;KAAAA,W;AAmCN,OAAO,MAAMiB,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAOvB,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMmB,gB;;AAIb,SAASnB,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useLayoutEffect, useEffect } from \"react\";\r\nimport data from \"./data.json\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [chosenId, setChosenId] = useState([]);\r\n  const [info, setInfo] = useState({});\r\n  const [dataJson, setDataJson] = useState([ ...data ]);\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener(\"resize\", updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        data,\r\n        useWindowSize,\r\n        setChosenId,\r\n        chosenId,\r\n        info,\r\n        setInfo,\r\n        dataJson,\r\n        setDataJson,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n"]},"metadata":{},"sourceType":"module"}